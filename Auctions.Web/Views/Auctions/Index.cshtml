@model X.PagedList.IPagedList<Auctions.Data.Models.AuctionViewModel>
@using X.PagedList.Mvc

@{
    ViewBag.Title = "Auctions";
}

@if (ViewBag.StatusMessage != "")
{
    <div class="alert alert-success">
        @ViewBag.StatusMessage
    </div>
}

<h2 class="text-primary mb-3">
    Auctions
    @if (User.IsInRole("User"))
    {
        @Html.ActionLink("Create New Auction", "Create", new { }, new { @class = "btn btn-primary float-right" })
    }
</h2>

<h4>Filters</h4>
@using (Html.BeginForm("Index", "Auctions", FormMethod.Get, new { @class = "row" }))
{
    <div class="form-group col-md-3">
        <label>Find By Auction Name:</label>
        @Html.TextBox("searchString", "", new { @class = "form-control" })
    </div>
    <div class="form-group col-md-3">
        <label>Low price:</label>
        @Html.TextBox("lowPrice", new { }, new { type = "number", @class = "form-control" })
    </div>
    <div class="form-group col-md-3">
        <label>High price:</label>
        @Html.TextBox("highPrice", new { }, new { type = "number", @class = "form-control" })
    </div>
    <div class="form-group col-md-3">
        <label>Status:</label>
        @{
            var option0 = ViewBag.Status == null ? "selected=\"selected\"" : "";
            var option1 = ViewBag.Status == 1 ? "selected=\"selected\"" : "";
            var option2 = ViewBag.Status == 2 ? "selected=\"selected\"" : "";

        }
        <select id="status" name="status" class="form-control">
            <option @option0 value="0" class="form-control">Select STATUS</option>
            <option @option1 value="1" class="form-control">OPENED</option>
            <option @option2 value="2" class="form-control">COMPLETED</option>
        </select>
    </div>
    <div class="form-group col-12 text-center">
        <input type="submit" value="Search" class="btn btn-primary" />
    </div>
}

@{
    var i = 1;
}

@foreach (var item in Model)
{
    if (i % 4 == 1)
    {
        @:<div class="row">
        }
        @Html.Partial("_Auction", item)
        if (i % 4 == 0)
        {
        @:</div>
    }
    i++;
}
@if (i % 4 != 1)
{
    @:</div>
}

@*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@
<center>
    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page = page,
        searchString = ViewBag.SearchString,
        lowPrice = ViewBag.LowPrice,
        highPrice = ViewBag.HighPrice,
        status = (ViewBag.Status == 0 ? null : ViewBag.Status)
    }))
</center>

@Scripts.Render("~/bundles/jquery")

<script>

    $(function () {
        $(".time").each(function () {
            var that = this;

            var timer = setInterval(function () {
                if (getDuration(that.innerHTML) == 0) {

                    clearInterval(timer);

                    $(that).parent().parent().find()

                } else {
                    $(that).html(formatTime(getDuration(that.innerHTML) - 1));
                }
            }, 1000);
        })
    });

    function formatTime(duration) {
        var hours = parseInt(duration / 3600),
            remainder = duration % 3600,
            minutes = parseInt(remainder / 60),
            seconds = remainder % 60;

        var hoursStr = hours + "";
        if (hours < 10) hoursStr = "0" + hoursStr;
        var minutesStr = minutes + "";
        if (minutes < 10) minutesStr = "0" + minutesStr;
        var secondsStr = seconds + "";
        if (seconds < 10) secondsStr = "0" + secondsStr;

        return (hoursStr + ":"
            + minutesStr + ":"
            + secondsStr);
    }

    function getDuration(time) {
        var arr = time.split(":");

        var seconds = (+arr[0]) * 60 * 60 + (+arr[1]) * 60 + (+arr[2]);

        return seconds;
    }

</script>
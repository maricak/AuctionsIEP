@model Auctions.Data.Models.AuctionViewModel


<div class="col-lg-3 col-sm-6 mb-3" id="auction-@Model.Id" name="@Model.Id">
    <div class="card">
        <h4 class="text-center text-primary card-header">
            @Html.ActionLink(Model.Name, "Details", new { id = Model.Id })
        </h4>
        <ul class="list-group list-group-flush">
            <li class="list-group-item pb-0" style="height:282px">
                @{
                    var base64 = Convert.ToBase64String(Model.Image);
                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                }
                <img class="img-fluid img-auction under w-100" height="100" src="@imgSrc" />

                @if (Model.Status == Auctions.Data.Models.AuctionStatus.COMPLETED)
                {
                    <img class="img-fluid img-auction over w-100" src="~/Content/Images/soldout.png" />
                }
                else
                {
                    <img class="img-fluid img-auction over w-100 d-none" src="~/Content/Images/soldout.png" />
                }
            </li>
            <li class="list-group-item text-center h5 time">
                @if (Model.Status == Auctions.Data.Models.AuctionStatus.COMPLETED)
                {
                    @Html.DisplayName("--:--:--")
                }
                else
                {
                    var duration = Model.ClosingTime.ToLocalTime() - DateTime.UtcNow.ToLocalTime();
                    int h = duration.Days * 24 + duration.Hours;
                    int m = duration.Minutes;
                    int s = duration.Seconds;

                    @Html.DisplayName("" + (h < 10 ? "0" : "") + h + ":" + (m < 10 ? "0" : "") + m + ":" + (s < 10 ? "0" : "") + s)
                    //@Html.DisplayName(duration.ToString(@"hh\:mm\:ss"))
                    //@Html.DisplayFor(model => model.Duration)
                }
            </li>
            <li class="list-group-item text-center h5">
                <span class="price">@Html.DisplayFor(model => model.CurrentPrice)</span>
                @Html.DisplayFor(model => model.Currency)
            </li>
            <li class="list-group-item text-center h5 bidder">
                @if (Model.Status == Auctions.Data.Models.AuctionStatus.COMPLETED)
                {
                    if (Model.LastBidder == "")
                    {
                        @Html.DisplayName("No winner")
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.LastBidder)
                    }
                }
                else if (Model.LastBidder == "")
                {
                    <span class="first-one">Be the first one to bid!</span>
                }
                else
                {
                    @Html.DisplayFor(model => model.LastBidder)
                }
            </li>
        </ul>
        <div class="card-footer text-center">
            @if (Model.Status == Auctions.Data.Models.AuctionStatus.COMPLETED)
            {
                @Html.ActionLink("Sold", "", new { }, new { @class = "btn btn-danger disabled bg-danger btn-sold" })
                using (Ajax.BeginForm("Bid", "Auctions", new AjaxOptions { HttpMethod = "POST", OnSuccess = "update" }, new { @class = "row bid-form d-none" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="number" id="offer" name="offer" class="form-control col-8" value="@Model.CurrentNumberOfTokens" />
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="submit" value="Bid" class="btn btn-success col-4" />
                }
            }
            else
            {
                @Html.ActionLink("Sold", "", new { }, new { @class = "btn btn-danger disabled bg-danger btn-sold d-none" })
                using (Ajax.BeginForm("Bid", "Auctions", new AjaxOptions { HttpMethod = "POST", OnSuccess = "update" }, new { @class = "row bid-form" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="number" id="offer" name="offer" class="form-control col-8" value="@Model.CurrentNumberOfTokens" />
                    <input type="hidden" id="id" name="id" value=@Model.Id />
                    <input type="submit" value="Bid" class="btn btn-success col-4" />
                }
            }

            <span class="text-danger message">
                @Html.DisplayFor(m => m.Message)
            </span>
        </div>
    </div>
</div>
